buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
    }
}

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    //graphql
    id 'com.apollographql.apollo3' version "3.8.1"

    // Grpc
    id 'com.google.protobuf'
    id 'kotlin-android'
    id 'kotlinx-serialization'
}

android {
    namespace 'com.example.data'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'chat.proto'
    }
}

kapt {
    correctErrorTypes true
}

apollo{
    service("service"){
        packageName.set("com.example.data")
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.22.2' }

    plugins {
        java { artifact = "io.grpc:protoc-gen-grpc-java:1.54.0" }
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.54.0' }
        grpckt { artifact = 'io.grpc:protoc-gen-grpc-kotlin:1.3.0:jdk8@jar' }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                kotlin {
                    option 'lite'
                }
                //java {
                //    option 'lite'
                //}
                //remove java
            }
            task.plugins {
                java { option 'lite' }
                grpc { option 'lite' }
                grpckt { option 'lite' }
            }
        }
    }
}

dependencies {
    implementation project(path: ':core')
    implementation "androidx.core:core-ktx:$kotlin_version"

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

    //hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    //graphql
    implementation 'com.apollographql.apollo3:apollo-runtime:3.8.1'

    // Grpc/protobuf
    def grpc_version = '1.54.0'
    implementation(project(path: ':proto'))
    protobuf(project(path: ':proto'))

    //new
    implementation "io.grpc:grpc-android:$grpc_version"
    implementation "io.grpc:grpc-okhttp:$grpc_version"
    implementation "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "io.grpc:grpc-okhttp:$grpc_version"

    //old
    api 'io.grpc:grpc-kotlin-stub:1.3.0'
    api "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation 'io.grpc:grpc-android:1.54.0'
    implementation 'com.google.protobuf:protobuf-kotlin-lite:3.21.2'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'

    implementation "io.ktor:ktor-client-core:2.2.4"
    implementation "io.ktor:ktor-client-cio:2.2.4"
    implementation 'io.ktor:ktor-client-serialization:2.2.4'
    implementation "io.ktor:ktor-serialization-kotlinx-json:2.2.4"
    implementation "io.ktor:ktor-client-content-negotiation:2.2.4"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    implementation "io.ktor:ktor-client-android:2.2.4"
    implementation "io.ktor:ktor-client-logging:2.2.4"

    // rabbitmq
    implementation "com.rabbitmq:amqp-client:5.14.2"
}